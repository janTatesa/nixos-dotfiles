# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "thunderbolt"
    "nvme"
    "usb_storage"
    "usbhid"
    "sd_mod"
    "sdhci_pci"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/9ef0abb6-58ef-48ac-90f5-bd36a4a38fbd";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-fdb500e1-6de2-417a-9f46-dbc8fe9dd918".device =
    "/dev/disk/by-uuid/fdb500e1-6de2-417a-9f46-dbc8fe9dd918";

  boot.initrd.luks.devices."luks-e0d73758-e24a-4c66-b33b-5f5ec6dafc9a".device =
    "/dev/disk/by-uuid/e0d73758-e24a-4c66-b33b-5f5ec6dafc9a";
  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/4EB5-44E0";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/3ce2c80a-c6d9-4df4-a2f7-b2b7f82517b3"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
